global:
  image:
    imagePullPolicy: Always
dex:
  enabled: false
server:
  name: server
  replicas: ""
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 6
    targetCPUUtilizationPercentage: 150
    targetMemoryUtilizationPercentage: 150
  extraArgs:
    - --insecure
    - --rootpath
    - /argo-cd
    - --basehref
    - /argo-cd
  resources:
    requests:
      cpu: 50m
      memory: 256Mi
  ingress:
    enabled: true
    annotations:
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    labels: {}
    ingressClassName: "nginx"
    hosts:
      - cluster.yumenomatayume.home
    paths:
      - /argo-cd
    pathType: Prefix
    extraPaths: []
    tls:
      - secretName: argocd-tls-certificate
        hosts:
          - argocd.example.com
    https: false
  ingressGrpc:
    enabled: true
    isAWSALB: false
    annotations:
      nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
    labels: {}
    ingressClassName: "nginx"
    hosts:
      - grpc.cluster.yumenomatayume.home
    paths:
      - /argo-cd
    pathType: Prefix
    tls:
      - secretName: argocd-tls-certificate
        hosts:
          - grpc.argocd.example.com
    https: true
  configEnabled: true
  config:
    configManagementPlugins: |
      - name: kustomize-build-enable-helm
        generate:
          command: [ "sh", "-c" ]
          args: [ "kustomize build --enable-helm" ]
      - name: argocd-vault-plugin
        generate:
          command: ["argocd-vault-plugin"]
          args: ["generate", "./"]
    resource.customizations: |
      admissionregistration.k8s.io/MutatingWebhookConfiguration:
        ignoreDifferences: |
          jsonPointers:
          - /webhooks/0/clientConfig/caBundle
      admissionregistration.k8s.io/ValidatingWebhookConfiguration:
        ignoreDifferences: |
          jsonPointers:
          - /webhooks/0/clientConfig/caBundle
    resource.customizations: |
      argoproj.io/Application:
        health.lua: |
          hs = {}
          hs.status = "Progressing"
          hs.message = ""
          if obj.status ~= nil then
            if obj.status.health ~= nil then
              hs.status = obj.status.health.status
              if obj.status.health.message ~= nil then
                hs.message = obj.status.health.message
              end
            end
          end
          return hs
repoServer:
  volumeMounts:
  - name: custom-tools
    mountPath: /usr/local/bin/argocd-vault-plugin
    subPath: argocd-vault-plugin
  volumes:
  - name: custom-tools
    emptyDir: {}
  initContainers:
  - name: download-tools
    image: alpine:3.8
    command: [sh, -c]
    env:
      - name: AVP_VERSION
        value: "1.12.0"
    args:
      - >-
        wget -O argocd-vault-plugin
        https://github.com/argoproj-labs/argocd-vault-plugin/releases/download/v${AVP_VERSION}/argocd-vault-plugin_${AVP_VERSION}_linux_amd64 &&
        chmod +x argocd-vault-plugin &&
        mv argocd-vault-plugin /custom-tools/
    volumeMounts:
      - mountPath: /custom-tools
        name: custom-tools
